{"version":3,"sources":["logo.svg","components/HeaderComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","alert","username","value","password","remember","checked","color","dark","expand","className","id","src","height","width","alt","onClick","isOpen","navbar","to","style","outline","toggle","onSubmit","htmlFor","type","name","innerRef","input","check","Component","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36c255c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\nimport { Navbar, NavLink, Jumbotron, Nav, NavbarToggler, Collapse, NavItem, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { CodeSlash, Award, Briefcase, Inbox } from 'react-bootstrap-icons';\n\nclass Header extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        }\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav(){\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n        \n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(){\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password\" + this.password.value + \" Remember: \" + this.remember.checked);\n        \n    }\n\n    render(){\n        return(\n            <>  \n                <Navbar color=\"dark\" dark expand=\"md\">\n                    <div className=\"container\">\n\n                        <div className=\"container\">\n                            <div className=\"row justify-content-center\">\n                                <div className=\"\">\n                                    <img id=\"logo\" src=\"/myportfolio/assets/images/logo.png\" height=\"90\" width=\"397\" alt=\"Aridai Santana Front-End Developer\"/>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <NavbarToggler onClick={this.toggleNav} />\n                                    <Collapse isOpen={this.state.isNavOpen} navbar> \n                                        <Nav navbar>\n                                            <NavItem>\n                                                <NavLink className=\"nav-link\" to=\"#portfolio\">\n                                                    <Briefcase /> Portfolio\n                                                </NavLink>\n                                            </NavItem>\n                                            <NavItem>\n                                                <NavLink className=\"nav-link\" to=\"#education\">\n                                                    <Award /> Education\n                                                </NavLink>\n                                            </NavItem>\n                                            <NavItem>\n                                                <NavLink className=\"nav-link\" to=\"#skillset\">\n                                                    <CodeSlash /> Skill Set\n                                                </NavLink>\n                                            </NavItem>\n                                        </Nav>\n                                        <Nav className=\"ml-auto\" navbar>\n                                            <NavItem>\n                                                <Button style={{color: '#98fa94'}} outline onClick={this.toggleModal}>\n                                                    <Inbox /> Contact me\n                                                </Button>\n                                            </NavItem>\n                                        </Nav>\n                                    </Collapse>\n                            </div>\n                        </div>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Welcome to my portfolio.</h1>\n                                <p style={{color: '#98fa94'}}>Here you will find part of my work as Front-End developer.</p>\n\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Contact me</ModalHeader>\n                    <ModalBody>\n                       <Form onSubmit={this.handleLogin}>\n                           <FormGroup>\n                               <Label htmlFor=\"username\">Name</Label>\n                               <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input}></Input>\n                           </FormGroup>\n                           <FormGroup>\n                               <Label htmlFor=\"password\">Email</Label>\n                               <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input}></Input>\n                           </FormGroup>\n                           <FormGroup check>\n                               <Label check>\n                                   <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input}/>\n                                       Remember me\n                               </Label>\n                           </FormGroup>\n                           <FormGroup >\n                                <Button type=\"submit\" name=\"submit\" color=\"primary\">Login</Button>\n                           </FormGroup>\n                       </Form>\n                    </ModalBody>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport Header from './HeaderComponent';\n\nclass Main extends Component{\n\n    constructor(props){\n        super(props);\n\n    }\n\n    render(){\n\n        return(\n            <div>\n                <Header />\n            </div>\n        );\n    }\n}\n\nexport default Main;","import logo from './logo.svg';\nimport './App.css';\nimport Main from './components/MainComponent';\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}